#!/usr/bin/env python
# -*- coding: utf-8 -*-
# author： Gz
# datetime： 2021/11/24 21:32
import time

time_mobile = [0.01, 8.805513381958008, 1.5873908996582031, 1.8606185913085938, 15.390872955322266, 1.070261001586914, 1.6598701477050781, 9.803056716918945, 1.0170936584472656, 10.059833526611328, 1.9435882568359375, 8.593320846557617, 1.6968250274658203, 1.4920234680175781, 1.3649463653564453, 0.13947486877441406, 57.0530891418457, 0.10514259338378906, 0.060558319091796875, 28.63478660583496, 0.21958351135253906, 7.573366165161133]

time_edge = [0.01, 0.3123199939727783, 0.03993599861860275, 0.05632000043988228, 0.9175040125846863, 0.023552000522613525, 0.04095999896526337, 0.4915199875831604, 0.008191999979317188, 0.6379520297050476, 0.006144000217318535, 0.4403199851512909, 0.006144000217318535, 0.02143999934196472, 0.0562559999525547, 0.002047999994829297, 3.7314560413360596, 0.005119999870657921, 0.002047999994829297, 1.5769599676132202, 0.004095999989658594, 0.4136959910392761]

time_cloud = [0.01, 0.23267200589179993, 0.015615999698638916, 0.03939199820160866, 0.8267199993133545, 0.019200000911951065, 0.0297279991209507, 0.39446398615837097, 0.011615999974310398, 0.5207039713859558, 0.010304000228643417, 0.3651840090751648, 0.010304000228643417, 0.015552000142633915, 0.05119999870657921, 0.0024319998919963837, 2.300607919692993, 0.008960000239312649, 0.0024319998919963837, 0.995743989944458, 0.007648000027984381, 0.27055999636650085]

times = [[time_mobile[i], time_edge[i]] for i in range(len(time_edge))]

a = [1,2,3]
b = [7,8,9]
c = [13,14,15]

from itertools import product
keys = ['01' for _ in range(len(time_edge))]
print(keys)

start_time = time.time()
latency_all = []
locals = []
sum_all = []
f1 = open("./locals.txt", 'a', encoding='utf-8')
f2 = open("./latency_all.txt", 'a', encoding='utf-8')
f3 = open("./sum_all.txt", 'a', encoding='utf-8')
for item in product(*keys):
    locals.append([int(v) for i, v in enumerate(item)])
    latency = [times[i][int(v)] for i, v in enumerate(item)]
    latency_all.append(latency)
    sum_all.append(sum(latency))

print(time.time()-start_time)
# f1.write(str(locals)+'\n')
# f2.write(str(latency_all)+'\n')
# f3.write(str(sum_all)+'\n')
print(len(sum_all))
print(sum_all.index(min(sum_all)))
print(min(sum_all))
#     print(item)
# 三个列表中对应下标位置只选择一个列表的，然后给出所有的排列可能，比如下标0选择a[0]可能的情况如下
